import DateTimeFormatOptions from './DateTimeFormatOptions';
import Formats from './Formats';
import IntlError from './IntlError';
import NumberFormatOptions from './NumberFormatOptions';
declare type Props = {
    locale: string;
    timeZone?: string;
    onError?(error: IntlError): void;
    formats?: Partial<Formats>;
    now?: Date;
};
export default function createFormatter({ formats, locale, now: globalNow, onError, timeZone }: Props): {
    dateTime: (value: Date | number, formatOrOptions?: string | DateTimeFormatOptions | undefined) => string;
    number: (value: number | bigint, formatOrOptions?: string | NumberFormatOptions | undefined) => string;
    relativeTime: (date: number | Date, now?: number | Date | undefined) => string;
};
export {};
