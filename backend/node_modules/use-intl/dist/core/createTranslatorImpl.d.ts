import AbstractIntlMessages from './AbstractIntlMessages';
import { InitializedIntlConfiguration } from './IntlConfiguration';
import { TranslationValue } from './TranslationValues';
import NestedKeyOf from './utils/NestedKeyOf';
export declare type CoreRichTranslationValues = Record<string, TranslationValue | ((chunks: string) => string)>;
export declare type CreateTranslatorImplProps<Messages> = InitializedIntlConfiguration & {
    namespace: string;
    messages: Messages;
};
export default function createTranslatorImpl<Messages extends AbstractIntlMessages, NestedKey extends NestedKeyOf<Messages>>({ getMessageFallback, messages, namespace, onError, ...rest }: CreateTranslatorImplProps<Messages>, namespacePrefix: string): {
    (key: import("./utils/MessageKeys").default<import("./utils/NestedValueOf").default<Messages, NestedKey>, NestedKeyOf<import("./utils/NestedValueOf").default<Messages, NestedKey>>>, values?: import("./TranslationValues").default | undefined, formats?: Partial<import("./Formats").default> | undefined): string;
    rich(key: string, values: CoreRichTranslationValues, formats?: Partial<import("./Formats").default> | undefined): string;
    raw: (key: string) => any;
};
