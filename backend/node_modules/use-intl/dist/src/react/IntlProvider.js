import React, { useEffect } from 'react';
import { defaultGetMessageFallback, defaultOnError } from '../core/defaults';
import validateMessages from '../core/validateMessages';
import IntlContext from './IntlContext';
export default function IntlProvider({ children, onError = defaultOnError, getMessageFallback = defaultGetMessageFallback, messages, ...contextValues }) {
    if (process.env.NODE_ENV !== 'production') {
        // eslint-disable-next-line react-hooks/rules-of-hooks
        useEffect(() => {
            if (messages) {
                validateMessages(messages, onError);
            }
        }, [messages, onError]);
    }
    return (React.createElement(IntlContext.Provider, { value: { ...contextValues, messages, onError, getMessageFallback } }, children));
}
//# sourceMappingURL=IntlProvider.js.map